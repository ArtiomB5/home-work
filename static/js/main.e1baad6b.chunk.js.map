{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5/styles/header.module.scss","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h2/style/style.module.css"],"names":["module","exports","Header","className","header_style","wrapper","title","navbar","to","navLink","Message","props","mStyle","message__wrapper","message__avatar","src","avatar","alt","message__img","message__Langle","message__content","message__name","name","message__data","message__text","message","message__time","time","messageData","HW1","style","borderBottom","padding","Affair","affair","affair__content","onClick","deleteAffairCallback","id","affair__deleteButton","Affairs","mappedAffairs","data","map","a","_id","affairs","affairs__buttonsBlock","setFilter","affairs__button","defaultAffairs","priority","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","event","console","log","currentTarget","inputName","trim","alert","HW3","setUsers","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editMsg","setEditMsg","mouseOverHandler","mouseLeaveHandler","SpanInputInfo","onMouseOver","onMouseLeave","margin","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Junior","JuniorPlus","Error404","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e1baad6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__GBdm3\",\"message__wrapper\":\"Message_message__wrapper__2daHv\",\"message__avatar\":\"Message_message__avatar__735UJ\",\"message__Langle\":\"Message_message__Langle__1vAKg\",\"message__img\":\"Message_message__img__1DcI4\",\"message__content\":\"Message_message__content__496Dd\",\"message__name\":\"Message_message__name__V_V3Y\",\"message__data\":\"Message_message__data__3jiBs\",\"message__time\":\"Message_message__time__342un\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"header_wrapper__29qxI\",\"title\":\"header_title__3YyM4\",\"navbar\":\"header_navbar__1QjpB\",\"navLink\":\"header_navLink__1hQr1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3YXf_\",\"errorInput\":\"SuperInputText_errorInput__2dxVM\",\"error\":\"SuperInputText_error__tBQ2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1D4U2\",\"column\":\"HW4_column__1snkX\",\"testSpanError\":\"HW4_testSpanError__2Jx3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__Bk9A6\",\"red\":\"SuperButton_red__13Cir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__gUrzN\",\"spanClassName\":\"SuperCheckbox_spanClassName__3tf4w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__snnjA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1k_v-\",\"error\":\"Greeting_error__1dKLP\"};","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport header_style from './styles/header.module.scss'\n\nfunction Header() {\n    return (\n        <div className={header_style.wrapper}>\n          <div className={header_style.title}>\n            <h1>react homework</h1>\n          </div>\n          <div className={header_style.navbar}>\n            <NavLink to='/pre-junior' className={header_style.navLink}>pre-junior</NavLink>\n            <NavLink to='/junior' className={header_style.navLink}>junior</NavLink>\n            <NavLink to='/junior-plus' className={header_style.navLink}>junior-plus</NavLink>\n          </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport mStyle from './Message.module.css'\n\ntype propsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: propsType) {\n    return (\n        <div>\n            <div className={mStyle.message__wrapper}>\n                <div className={mStyle.message__avatar} >\n                    <img src={props.avatar} alt=\"User avatar photo\" className={mStyle.message__img}/>\n                </div>\n                <div className={mStyle.message__Langle}>\n                </div>\n                <div className={mStyle.message__content}>\n                    <div className={mStyle.message__name}>\n                        {props.name}\n                    </div>\n                    <div className={mStyle.message__data}>\n                        <div className={mStyle.message__text}>\n                            {props.message}\n                        </div>\n                        <div className={mStyle.message__time}>\n                            {props.time}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\n\nconst messageData = {\n  avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n  name: 'Some Name',\n  message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur vitae erat convallis, dapibus ipsum ac, semper est. Praesent sagittis, dolor ac eleifend sodales, ipsum risus vulputate eros, ut suscipit mi lorem a nibh. Vivamus congue elit eros, eu venenatis elit auctor nec. Integer blandit sagittis dapibus. Donec a vulputate tortor. Praesent felis ante, ullamcorper in metus in, condimentum pulvinar arcu. Integer magna mi, eleifend gravida accumsan sit amet, hendrerit sed nibh. Integer odio tellus, euismod a scelerisque nec, facilisis vel mi. Pellentesque finibus dolor non interdum faucibus. Maecenas in nulla facilisis, lobortis felis quis, facilisis enim. Sed vitae risus neque. Integer molestie porttitor turpis, quis tempor tellus tristique non. Etiam congue dolor ac purus condimentum dignissim. Nam eget nibh neque. Nam suscipit dictum diam. Nullam elementum rutrum risus, at facilisis diam eleifend ac.',\n  time: '22:00',\n}\n\nfunction HW1() {\n  const borderStyle = {\n    borderBottom: '1px solid #cf4936',\n    padding: '10px'\n  }\n  return (\n    <div style={borderStyle}>\n      homeworks 1\n      <Message\n        avatar={messageData.avatar}\n        name={messageData.name}\n        message={messageData.message}\n        time={messageData.time}\n      />\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeMessage/>*/}\n    </div>\n  )\n}\n\nexport default HW1\n","import React from 'react'\nimport style from './style/style.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: any // need to fix any\n    deleteAffairCallback: any // need to fix any\n    id: number\n}\n\nfunction Affair(props: AffairPropsType) {\n\n    const deleteCallback = () => {\n        return(\n            props.deleteAffairCallback(props.id)\n        )\n    };\n    // need to fix\n\n    return (\n        <div className={style.affair}>\n            <div className={style.affair__content}>{props.affair}</div>\n            <button onClick={deleteCallback} className={style.affair__deleteButton}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType} from './HW2'\nimport style from './style/style.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (param: 'all' | 'high' | 'low' | 'middle') => void\n    deleteAffairCallback: (param: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            id={a._id}\n            affair={a.name}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div className={style.affairs}>\n\n            {mappedAffairs}\n            <div className={style.affairs__buttonsBlock}>\n                <button onClick={setAll} className={style.affairs__button}>All</button>\n                <button onClick={setHigh} className={style.affairs__button}>High</button>\n                <button onClick={setMiddle} className={style.affairs__button}>Middle</button>\n                <button onClick={setLow} className={style.affairs__button}>Low</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\n// export type AffairPriorityType = any // need to fix any\nexport type AffairType = {\n  _id: number\n  name: string\n  priority: string\n} // need to fix any\nexport type FilterType = 'all' | 'high' | 'low' | 'middle'\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n  {_id: 1, name: 'React', priority: 'high'},\n  {_id: 2, name: 'anime', priority: 'low'},\n  {_id: 3, name: 'games', priority: 'low'},\n  {_id: 4, name: 'work', priority: 'high'},\n  {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: string): Array<AffairType> => { // need to fix any\n  if (filter === 'all') return affairs\n  else return affairs.filter((affair: AffairType) => affair.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n  let result = affairs.filter((affair: AffairType) => affair._id !== _id)// need to fix any\n  return (result)\n}\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n  const [filter, setFilter] = useState<FilterType>('all')\n\n  const filteredAffairs = filterAffairs(affairs, filter)\n  const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n  const borderStyle = {\n    borderBottom: '1px solid #cf4936',\n    padding: '10px'\n  }\n  return (\n    <div style={borderStyle}>\n      homeworks 2\n      should work (должно работать)\n      <Affairs\n        data={filteredAffairs}\n        setFilter={setFilter}\n        deleteAffairCallback={deleteAffairCallback}\n      />\n\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeAffairs/>*/}\n    </div>\n  )\n}\n\nexport default HW2\n","import React, {ChangeEvent, ChangeEventHandler} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (param:ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: boolean // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : '' // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, ChangeEventHandler, useState} from 'react'\nimport Greeting from './Greeting'\n\n\ntype GreetingContainerPropsType = {\n    users: Array<string> // need to fix any\n    addUserCallback: (name:string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<boolean>(false) // need to fix any\n\n    const setNameCallback = (event:ChangeEvent<HTMLInputElement>) => {\n        console.log(event.currentTarget.value);\n        setName(event.currentTarget.value);\n        setError(false);\n    }\n    const addUser = () => {\n        let inputName = name.trim();\n        if (inputName === '') {\n            setError(true);\n        } else {\n            addUserCallback(inputName);// need to fix\n            alert(`Hello, ${inputName} !`); // need to fix\n            setName('');\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\n\n\n// types\nexport type UserType = {\n  _id: string // need to fix any\n  name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n  const [users, setUsers] = useState<Array<string>>([]) // need to fix any\n\n  const addUserCallback = (name: string) => { // need to fix any\n    setUsers([...users, name]) // need to fix\n  }\n\n  const borderStyle = {\n    borderBottom: '1px solid #cf4936',\n    padding: '10px'\n  }\n\n  return (\n    <div style={borderStyle}>\n      homeworks 3\n\n      {/*should work (должно работать)*/}\n      <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeGreeting/>*/}\n    </div>\n  )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? className : s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n      onChangeChecked && (e.currentTarget.checked ? onChangeChecked(false) : onChangeChecked(true));\n      // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(!e.currentTarget.checked)\n\n    const borderStyle = {\n        borderBottom: '1px solid #cf4936',\n        padding: '10px'\n    }\n\n    return (\n        <div style={borderStyle}>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={() => setChecked(!checked)}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n  HTMLAttributes,\n  useState\n} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void\n  onEnter?: () => void\n  error?: string\n  spanClassName?: string\n\n  spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n  {\n    autoFocus, // игнорировать изменение этого пропса\n    onBlur,\n    onEnter,\n    spanProps,\n\n    ...restProps// все остальные пропсы попадут в объект restProps\n  }\n) => {\n  const [editMode, setEditMode] = useState<boolean>(false)\n  const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n  const [editMsg, setEditMsg] = useState(false);\n\n  const onEnterCallback = () => {\n    // setEditMode() // выключить editMode при нажатии Enter\n    setEditMode(false);\n    onEnter && onEnter()\n  }\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n    // setEditMode() // выключить editMode при нажатии за пределами инпута\n    setEditMode(false);\n    onBlur && onBlur(e)\n  }\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n    // setEditMode() // включить editMode при двойном клике\n    setEditMode(true);\n    onDoubleClick && onDoubleClick(e);\n  }\n\n  const spanStyle = {\n    margin: '15px 80px 15px 15px',\n    borderBottom: '1px solid #2f2d25'\n  }\n\n  const spanClassName = `${'x'} ${className}`\n\n  const mouseOverHandler = () => {\n    setEditMsg(true);\n  }\n\n  const mouseLeaveHandler = () => {\n    setEditMsg(false)\n  }\n\n  const SpanInputInfo = () => {\n    return (\n      <span>\n              <span onMouseOver={mouseOverHandler}\n                    onMouseLeave={mouseLeaveHandler}\n              >\n                💡\n            </span>\n        {editMode ?\n          <span>{editMsg ? 'To complete the text input, press the Enter key or click in an empty place on the page.' : ''}</span>\n          :\n          <span>{editMsg ? 'Double-click to change the text.' : ''}</span>\n        }\n\n      </span>\n    )\n  }\n\n  return (\n    <>\n      <span>\n        {editMode\n          ? (\n            <SuperInputText\n              autoFocus // пропсу с булевым значением не обязательно указывать true\n              onBlur={onBlurCallback}\n              onEnter={onEnterCallback}\n\n              {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n          ) : (\n            <span\n              onDoubleClick={onDoubleClickCallBack}\n              className={spanClassName}\n              style={spanStyle}\n              {...restSpanProps}\n            >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n              {children || restProps.value}\n            </span>\n          )\n        }\n      </span>\n      <SpanInputInfo/>\n    </>\n  )\n};\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n      const state: string = restoreState<string>('editable-span-value', value)\n      setValue(state);\n    }\n\n    return (\n        <div>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from './../../h6/HW6'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Junior() {\n    return (\n        <div>\n          Junior\n        </div>\n    )\n}\n\nexport default Junior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction JuniorPlus() {\n    return (\n        <div>\n          JuniorPlus\n        </div>\n    )\n}\n\nexport default JuniorPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport PreJunior from \"./pages/PreJunior\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n  PRE_JUNIOR: '/pre-junior',\n  JUNIOR: '/junior',\n  JUNIOR_PLUS: '/junior-plus',\n}\n\nfunction Routes() {\n  return (\n    <div>\n      {/*Switch выбирает первый подходящий роут*/}\n      <Switch>\n\n        {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n        {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n        <Route path={'/'} exact\n               render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n        <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n        <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n        <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n\n        {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n        <Route render={() => <Error404/>}/>\n\n      </Switch>\n    </div>\n  )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n  return (\n    <div>\n      <HashRouter>\n\n        <Header/>\n\n        <Routes/>\n\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <HW5/>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"style_affairs__lu7ie\",\"affairs__buttonsBlock\":\"style_affairs__buttonsBlock__1O0wD\",\"affairs__button\":\"style_affairs__button__3wl_x\",\"affair\":\"style_affair__mV2FB\",\"affair__content\":\"style_affair__content__QtE_f\",\"affair__deleteButton\":\"style_affair__deleteButton__2JoCI\"};"],"sourceRoot":""}